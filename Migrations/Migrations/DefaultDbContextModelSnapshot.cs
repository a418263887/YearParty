// <auto-generated />
using System;
using EFCore.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Migrations.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    partial class DefaultDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Model.AsmsSyncTable.Asms_Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AsmsID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("机票表ID");

                    b.Property<string>("CPLX")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("出票类型（票证）");

                    b.Property<string>("CP_COMPID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("出票公司ID");

                    b.Property<DateTime>("CP_DATETIME")
                        .HasColumnType("datetime2")
                        .HasComment("出票时间");

                    b.Property<string>("CP_DEPTID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("出票部门ID");

                    b.Property<string>("CP_USERID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("出票人工号");

                    b.Property<string>("CU_JSDW")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("外出票单位");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyrPhs")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("完整机票号");

                    b.Property<string>("DDBH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("订单编号");

                    b.Property<string>("DP_COMPID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("订票公司ID");

                    b.Property<DateTime>("DP_DATETIME")
                        .HasColumnType("datetime2")
                        .HasComment("订票时间");

                    b.Property<string>("DP_DEPTID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("订票部门ID");

                    b.Property<string>("DP_OFFICEID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("订票office号");

                    b.Property<string>("DP_PID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("订票工作号");

                    b.Property<string>("DP_USERID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("订票人工号");

                    b.Property<string>("HKGS")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("航司二字码");

                    b.Property<string>("JP_CFCITY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("机票出发城市");

                    b.Property<string>("JP_CFDATETIME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("机票_出发时间");

                    b.Property<string>("JP_CJR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("乘机人");

                    b.Property<string>("JP_CJRLX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("乘机人类型");

                    b.Property<string>("JP_CJRSJHM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("乘机人手机号码");

                    b.Property<string>("JP_CJRZJHM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("乘机人证件号码");

                    b.Property<string>("JP_CW")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("舱位");

                    b.Property<string>("JP_DDCITY")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("机票到达城市");

                    b.Property<string>("JP_HBH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("航班号");

                    b.Property<string>("JP_HC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("机票航程");

                    b.Property<string>("JP_HCGLGJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("国内国际 0:国际,1:国内");

                    b.Property<string>("JP_HCLX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("航程类型");

                    b.Property<decimal>("PJ_BX")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("票价_保险");

                    b.Property<decimal>("PJ_BXSJJSJ")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("票价_保险成本");

                    b.Property<decimal>("PJ_BXXJJSJ")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("票价_保险下级结算价");

                    b.Property<decimal>("PJ_CGJ")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("票价_账单价");

                    b.Property<decimal>("PJ_HJSJJSJ")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("票价_合计上级结算价");

                    b.Property<decimal>("PJ_HJXJJSJ")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("票价_合计下级结算价");

                    b.Property<decimal>("PJ_HK")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("票价_客户佣金");

                    b.Property<decimal>("PJ_JSF")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("机建费");

                    b.Property<decimal>("PJ_MJ")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("票面价");

                    b.Property<decimal>("PJ_TAX")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("燃油税");

                    b.Property<decimal>("PJ_XSJ")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("销售价");

                    b.Property<string>("PNRNO")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("PNR");

                    b.Property<string>("PZZT")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("票证状态 3:正常票,4:退票,5:废票");

                    b.Property<string>("SZDH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("三字码");

                    b.Property<string>("TKNO")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("票号");

                    b.Property<string>("TP_FLAG")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("退票标记0:正常票,1:退票,2:分航段退票,3:废票");

                    b.Property<string>("TP_SQDATETIME")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("退票申请时间");

                    b.Property<string>("TP_STDATETIME")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("退票实退时间");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZF_FKF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("支付状态0:未支付,1:已支付");

                    b.HasKey("Id");

                    b.HasIndex("AsmsID");

                    b.HasIndex("CPLX");

                    b.HasIndex("CP_COMPID");

                    b.HasIndex("CP_DATETIME");

                    b.HasIndex("CP_DEPTID");

                    b.HasIndex("CP_USERID");

                    b.HasIndex("CyrPhs");

                    b.HasIndex("DDBH");

                    b.HasIndex("DP_COMPID");

                    b.HasIndex("DP_DATETIME");

                    b.HasIndex("DP_DEPTID");

                    b.HasIndex("DP_USERID");

                    b.HasIndex("HKGS");

                    b.HasIndex("JP_DDCITY");

                    b.HasIndex("JP_HCGLGJ");

                    b.HasIndex("PNRNO");

                    b.HasIndex("PZZT");

                    b.HasIndex("SZDH");

                    b.HasIndex("TKNO");

                    b.HasIndex("TP_FLAG");

                    b.HasIndex("TP_SQDATETIME");

                    b.HasIndex("TP_STDATETIME");

                    b.ToTable("Asms_Ticket");
                });

            modelBuilder.Entity("Domain.Model.AsmsSyncTable.Asms_TicketChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AsmsID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("胜意表ID ");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GQDH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("改签单号 ");

                    b.Property<string>("N_TKNO")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("新票号 ");

                    b.Property<string>("O_QFSJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("起飞时间 ");

                    b.Property<string>("SZDH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("三字代号 ");

                    b.Property<string>("TKID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("机票表ID");

                    b.Property<string>("TKNO")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("票号 ");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateTime");

                    b.HasIndex("GQDH");

                    b.HasIndex("Id");

                    b.HasIndex("N_TKNO");

                    b.HasIndex("SZDH");

                    b.HasIndex("TKID");

                    b.HasIndex("TKNO");

                    b.ToTable("Asms_TicketChange");
                });

            modelBuilder.Entity("Domain.Model.AsmsSyncTable.Asms_TicketChangeRoute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CFCITY")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("出发城市 ");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DDCITY")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("到达城市 ");

                    b.Property<string>("GQDH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("改签单号 ");

                    b.Property<string>("MXID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("改签明细表ID ");

                    b.Property<string>("N_CFDATETIME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("新起飞时间 ");

                    b.Property<string>("N_CW")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("新舱位 ");

                    b.Property<string>("N_HBH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("新航班号 ");

                    b.Property<string>("O_CFDATETIME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("旧起飞时间");

                    b.Property<string>("O_CW")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("旧舱位 ");

                    b.Property<string>("O_HBH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("旧航班号 ");

                    b.Property<string>("SXH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("顺序号 ");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CFCITY");

                    b.HasIndex("CreateTime");

                    b.HasIndex("DDCITY");

                    b.HasIndex("GQDH");

                    b.HasIndex("Id");

                    b.HasIndex("MXID");

                    b.HasIndex("SXH");

                    b.ToTable("Asms_TicketChangeRoute");
                });

            modelBuilder.Entity("Domain.Model.AsmsSyncTable.Asms_TicketRoute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AsmsID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("胜意表ID ");

                    b.Property<string>("CFCITY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("出发城市 ");

                    b.Property<string>("CFDATETIME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("起飞时间_字符串 ");

                    b.Property<string>("CW")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("舱位 ");

                    b.Property<string>("CWJB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("舱位级别");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DDCITY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("到达城市 ");

                    b.Property<string>("HBH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("航班号 ");

                    b.Property<string>("HDZT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("航段状态0未用 1已用 2已废 ");

                    b.Property<string>("SXH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("顺序号 ");

                    b.Property<string>("TKID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("机票表ID");

                    b.Property<string>("TKNO")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("票号 ");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AsmsID");

                    b.HasIndex("CreateTime");

                    b.HasIndex("Id");

                    b.HasIndex("SXH");

                    b.HasIndex("TKID");

                    b.HasIndex("TKNO");

                    b.ToTable("Asms_TicketRoute");
                });

            modelBuilder.Entity("Domain.Model.Bud.BudGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ExecTime")
                        .HasColumnType("datetime2")
                        .HasComment("执行时间 ");

                    b.Property<string>("ExecUser")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("执行人 ");

                    b.Property<int?>("IOrder")
                        .HasColumnType("int")
                        .HasComment("显示排序 ");

                    b.Property<int>("IStatus")
                        .HasColumnType("int")
                        .HasComment("展示状态 ");

                    b.Property<string>("Kuid")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("kuid");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("分组名称");

                    b.Property<long>("ParentID")
                        .HasColumnType("bigint")
                        .HasComment("父Id ");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("WYPTPath")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("网逸平台 ");

                    b.Property<int>("ZT")
                        .HasColumnType("int")
                        .HasComment("状态 ");

                    b.HasKey("Id");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("ExecTime");

                    b.HasIndex("ExecUser");

                    b.HasIndex("Id");

                    b.HasIndex("Kuid");

                    b.HasIndex("Name");

                    b.HasIndex("ParentID");

                    b.HasIndex("UpdatedTime");

                    b.HasIndex("WYPTPath");

                    b.ToTable("BudGroup");
                });

            modelBuilder.Entity("Domain.Model.Bud.BudRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("BudGroupKuid")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("业务分组Kuid");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GS")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("航司条件");

                    b.Property<int>("GSUseType")
                        .HasColumnType("int")
                        .HasComment("航司用途 1不限 2包含  3排除");

                    b.Property<string>("PolicyCode")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("政策代码 此项留于以后匹配国内 暂时不用");

                    b.Property<string>("PolicyUser")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("政策员工");

                    b.Property<string>("RuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("规则名称");

                    b.Property<string>("Seg")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("航线 ");

                    b.Property<int>("SegUseType")
                        .HasColumnType("int")
                        .HasComment("航线用途 1不限 2包含  3排除");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("供应商条件");

                    b.Property<int>("SupplierUseType")
                        .HasColumnType("int")
                        .HasComment("供应商用途 1不限 2包含  3排除");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("操作人");

                    b.Property<string>("WYPT")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("网逸平台");

                    b.Property<int>("ZT")
                        .HasColumnType("int")
                        .HasComment("删除状态");

                    b.HasKey("Id");

                    b.HasIndex("BudGroupKuid");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("PolicyCode");

                    b.HasIndex("Seg");

                    b.HasIndex("SupplierCode");

                    b.HasIndex("UpdatedTime");

                    b.HasIndex("User");

                    b.HasIndex("WYPT");

                    b.HasIndex("ZT");

                    b.ToTable("BudRule");
                });

            modelBuilder.Entity("Domain.Model.Bud.Role_BudGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("BudGroupID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ExecTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("BudGroupID");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("ExecTime");

                    b.HasIndex("ExecUser");

                    b.HasIndex("RoleID");

                    b.ToTable("Role_BudGroup");
                });

            modelBuilder.Entity("Domain.Model.GeneralCfg.WorldCityAirportCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ActionUser")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("操作人");

                    b.Property<string>("AirPortCode")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("机场代码");

                    b.Property<string>("AirPortName")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("机场名称");

                    b.Property<string>("CityCode")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("城市代码");

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("城市名称");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("国家代码");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("国家名称");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("GnGj")
                        .HasColumnType("int")
                        .HasComment("国内国际");

                    b.Property<string>("IntercontinentalCode")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("洲际代码");

                    b.Property<string>("IntercontinentalName")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("洲际名称");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ActionUser");

                    b.HasIndex("AirPortCode");

                    b.HasIndex("AirPortName");

                    b.HasIndex("CityCode");

                    b.HasIndex("CityName");

                    b.HasIndex("CountryCode");

                    b.HasIndex("CountryName");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("GnGj");

                    b.HasIndex("IntercontinentalCode");

                    b.HasIndex("IntercontinentalName");

                    b.HasIndex("UpdatedTime");

                    b.ToTable("WorldCityAirportCode");
                });

            modelBuilder.Entity("Domain.Model.OfflineShare.OfflineShareDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ActionUser")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("操作人");

                    b.Property<long>("BatchNo")
                        .HasColumnType("bigint")
                        .HasComment("批次号");

                    b.Property<string>("BusinessGroup")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("业务组");

                    b.Property<string>("BusinessGroupKuid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("业务组Kuid");

                    b.Property<string>("Channel")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("渠道");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Cyr")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("承运人");

                    b.Property<string>("CyrPh")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("承运人票号");

                    b.Property<string>("Gngj")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("国内国际");

                    b.Property<DateTime?>("JieSuanDate")
                        .HasColumnType("datetime2")
                        .HasComment("结算日");

                    b.Property<decimal>("MyRate")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("占比数");

                    b.Property<string>("OfflineType")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("线下数据类型");

                    b.Property<string>("OrderDsc")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("订单类型Dsc");

                    b.Property<DateTime?>("PayDate")
                        .HasColumnType("datetime2")
                        .HasComment("收银日");

                    b.Property<string>("Ph")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("票号");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("利润金额");

                    b.Property<string>("ProfitTyp")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("线下利润类型");

                    b.Property<decimal>("RateTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("比例总数");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<DateTime?>("ReportDate")
                        .HasColumnType("datetime2")
                        .HasComment("报表日");

                    b.Property<long>("SaleReportId")
                        .HasColumnType("bigint")
                        .HasComment("销售报表ID");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("YuanGong")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("员工");

                    b.HasKey("Id");

                    b.HasIndex("ActionUser");

                    b.HasIndex("BatchNo");

                    b.HasIndex("BusinessGroup");

                    b.HasIndex("Channel");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("CyrPh");

                    b.HasIndex("Gngj");

                    b.HasIndex("Id");

                    b.HasIndex("JieSuanDate");

                    b.HasIndex("OfflineType");

                    b.HasIndex("OrderDsc");

                    b.HasIndex("PayDate");

                    b.HasIndex("Ph");

                    b.HasIndex("Price");

                    b.HasIndex("ProfitTyp");

                    b.HasIndex("ReportDate");

                    b.HasIndex("SaleReportId");

                    b.HasIndex("UpdatedTime");

                    b.ToTable("OfflineShareDetails");
                });

            modelBuilder.Entity("Domain.Model.OfflineShare.OfflineShareDirectory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ActionUser")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("操作人");

                    b.Property<long>("BatchNo")
                        .HasColumnType("bigint")
                        .HasComment("批次号");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("文件名");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("文件地址");

                    b.Property<int>("OfflineType")
                        .HasColumnType("int")
                        .HasComment("线下数据类型");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("分摊金额");

                    b.Property<string>("ProfitTyp")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("线下利润类型");

                    b.Property<string>("RangeStr")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("范围");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("备注");

                    b.Property<string>("ShareType")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("分摊方式");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ZT")
                        .HasColumnType("int")
                        .HasComment(" 状态1 已处理  2已撤回");

                    b.HasKey("Id");

                    b.HasIndex("ActionUser");

                    b.HasIndex("FileName");

                    b.HasIndex("FilePath");

                    b.HasIndex("OfflineType");

                    b.HasIndex("Price");

                    b.HasIndex("ProfitTyp");

                    b.HasIndex("RangeStr");

                    b.HasIndex("Remark");

                    b.HasIndex("ShareType");

                    b.HasIndex("UpdatedTime");

                    b.HasIndex("ZT");

                    b.ToTable("OfflineShareDirectory");
                });

            modelBuilder.Entity("Domain.Model.Rebate.ErrorRebate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyrPh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CyrPh");

                    b.HasIndex("Id");

                    b.HasIndex("Message");

                    b.ToTable("ErrorRebate");
                });

            modelBuilder.Entity("Domain.Model.Rebate.NotRebateReason", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AirLine")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("航司");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasComment("业务类型");

                    b.Property<string>("Cabins")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("舱位");

                    b.Property<string>("CgChannelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("外出票单位");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyrPh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("承运人-票号");

                    b.Property<string>("FlightNos")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("航班号");

                    b.Property<string>("FlyTimeStr")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasComment("起飞时间");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("未计算后返原因");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2")
                        .HasComment("报表日期");

                    b.Property<string>("Segs")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("行程");

                    b.Property<string>("TicketType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("票证类型");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AirLine");

                    b.HasIndex("BusinessType");

                    b.HasIndex("CgChannelName");

                    b.HasIndex("CyrPh");

                    b.HasIndex("Id");

                    b.HasIndex("ReportDate");

                    b.HasIndex("TicketType");

                    b.ToTable("NotRebateReason");
                });

            modelBuilder.Entity("Domain.Model.Rebate.RebateDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AirLine")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("航司");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasComment("业务类型");

                    b.Property<string>("ChannelGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("按国际票 渠道分组 国际分销 国际直销 国际三方平台 剩下的属于国际电商");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyrPh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("承运人票号");

                    b.Property<decimal>("ForecastRebate")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("预估后返(如果是有航司目标的按达到算)");

                    b.Property<int>("IsAirlineTargetOK")
                        .HasColumnType("int")
                        .HasComment("是否达到航司目标 0未 1达到");

                    b.Property<string>("NucString")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasComment("NUC信息");

                    b.Property<string>("OldSegs")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasComment("原始行程");

                    b.Property<decimal>("OrderPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("票面价格");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasComment("国际产品库的产品ID");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("国际产品库的产品名称");

                    b.Property<decimal>("Rebate")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("实际后返 如果达到航司目标（IsAirlineTargetOK=1）则统计实际后返需要加上预估后返");

                    b.Property<DateTime>("RebateDate")
                        .HasColumnType("datetime2")
                        .HasComment("后返日期");

                    b.Property<string>("RebateSeg")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasComment("后返行程");

                    b.Property<DateTime?>("ReportDate")
                        .HasColumnType("datetime2")
                        .HasComment("报表日期");

                    b.Property<decimal>("SalePriceAward")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("应该算后返的计奖销售额");

                    b.Property<decimal>("SalePriceMetering")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("计量的销售额");

                    b.Property<long>("SaleReportId")
                        .HasColumnType("bigint")
                        .HasComment("销售报表表自增ID 用于关联");

                    b.Property<string>("SegType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("行程类型");

                    b.Property<string>("Step")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)")
                        .HasComment("后返的计算步骤");

                    b.Property<int>("TicketCount")
                        .HasColumnType("int")
                        .HasComment("后返机票张数 连票算2张 因为第二张不进入后返 往返两条记录 返程不算 就算去程一张");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AirLine");

                    b.HasIndex("BusinessType");

                    b.HasIndex("ChannelGroup");

                    b.HasIndex("CreateTime");

                    b.HasIndex("CyrPh");

                    b.HasIndex("ForecastRebate");

                    b.HasIndex("Id");

                    b.HasIndex("IsAirlineTargetOK");

                    b.HasIndex("NucString");

                    b.HasIndex("OldSegs");

                    b.HasIndex("OrderPrice");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductName");

                    b.HasIndex("Rebate");

                    b.HasIndex("RebateDate");

                    b.HasIndex("RebateSeg");

                    b.HasIndex("ReportDate");

                    b.HasIndex("SalePriceAward");

                    b.HasIndex("SalePriceMetering");

                    b.HasIndex("SaleReportId");

                    b.HasIndex("SegType");

                    b.HasIndex("TicketCount");

                    b.HasIndex("UpdateTime");

                    b.ToTable("RebateDetail");

                    b.HasComment("后返明细表");
                });

            modelBuilder.Entity("Domain.Model.Rebate.RoundNoCalculate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("BusinessType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyrPhs")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment(" 票号（带-符号）");

                    b.Property<int>("IsCalculate")
                        .HasColumnType("int")
                        .HasComment(" 0未计算 1已计算 2已改签 3已退票");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessType");

                    b.HasIndex("CreateTime");

                    b.HasIndex("CyrPhs");

                    b.HasIndex("Id");

                    b.HasIndex("IsCalculate");

                    b.HasIndex("UpdateTime");

                    b.ToTable("RoundNoCalculate");
                });

            modelBuilder.Entity("Domain.Model.ReportModel.ReportField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ActionUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<string>("Ivalue")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Svalue")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ActionUser");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("FieldType");

                    b.HasIndex("Id");

                    b.HasIndex("Ivalue");

                    b.HasIndex("Svalue");

                    b.HasIndex("UpdatedTime");

                    b.ToTable("ReportField");
                });

            modelBuilder.Entity("Domain.Model.ReportModel.SaleReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AddDateDiff")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("提前预定天数");

                    b.Property<string>("AddFXZD")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("分销客户的公司名称");

                    b.Property<string>("AddFZQD")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("OTA渠道分组？");

                    b.Property<string>("AddFZSYB")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("分组事业部");

                    b.Property<string>("AddFZYWZ")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("分组业务组");

                    b.Property<decimal>("AddGQL2")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("改签利2");

                    b.Property<string>("AddHXFL")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("航线分类");

                    b.Property<decimal>("AddJYZJ")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("大客户节约资金");

                    b.Property<string>("AddOldCyr")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("原承运人（原三字代码）");

                    b.Property<string>("AddOldFlyTimeStr")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("原起飞时间");

                    b.Property<string>("AddOldPh")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("原票号");

                    b.Property<string>("AddOther")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddPZLX")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("票证类型？");

                    b.Property<decimal>("AddPriceOrDiscount")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new加价/让利 ");

                    b.Property<string>("AddQDFL")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("渠道分类");

                    b.Property<string>("AddQDFZ")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("渠道分组");

                    b.Property<string>("AddQDMC")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("渠道名称");

                    b.Property<string>("AddShare")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("共享航班");

                    b.Property<string>("AddTGLX")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("退改类型");

                    b.Property<string>("AddTHSDS")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("航司代售");

                    b.Property<int>("AddTicketCount")
                        .HasColumnType("int")
                        .HasComment("机票张数");

                    b.Property<string>("AddWDZCLX")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("原云报字段");

                    b.Property<string>("AddYWZTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("业务组Tag");

                    b.Property<string>("AddZCY")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("旧云报政策员");

                    b.Property<string>("AddZJHM")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("证件号码");

                    b.Property<string>("AirlineBigCode")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new航司大编码");

                    b.Property<string>("AirlineCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new航司二字码");

                    b.Property<string>("AirlineOrderCode")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new航司订单号");

                    b.Property<string>("ArrAirport")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new到达机场 ");

                    b.Property<string>("ArrAirportZhCn")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new到达机场中文 ");

                    b.Property<DateTime?>("AsmsReportDate")
                        .HasColumnType("datetime2")
                        .HasComment("new胜意报表日");

                    b.Property<string>("BusinessGroupKuid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new业务组 ");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasComment("new业务类型");

                    b.Property<DateTime?>("CGBLSJ")
                        .HasColumnType("datetime2")
                        .HasComment("new采购办理时间 ");

                    b.Property<decimal>("CGGQTK")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购改签退款 ");

                    b.Property<decimal>("CGST")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购实退");

                    b.Property<decimal>("CGYTJE")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购应退金额 ");

                    b.Property<decimal>("CGYTSTCE")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购应退实退差额");

                    b.Property<string>("CL_CBZX")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new成本中心 ");

                    b.Property<string>("CL_CBZXDH")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new成本中心代号 ");

                    b.Property<string>("CL_SZBM")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new所在部门 ");

                    b.Property<string>("CL_XMDH")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new项目单号 ");

                    b.Property<string>("CL_XMMC")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new项目名称 ");

                    b.Property<string>("CL_ZW")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new职务 ");

                    b.Property<string>("Cabins")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new全部舱位 ");

                    b.Property<decimal>("CgAmountDue")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购应付金额 ");

                    b.Property<string>("CgChannelCode")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new采购渠道编码(外出票单位编码)");

                    b.Property<string>("CgChannelName")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new采购渠道名称(外出票单位名称)");

                    b.Property<decimal>("CgFWF")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购服务费 ");

                    b.Property<decimal>("CgFacePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购票面价(采购订单价) ");

                    b.Property<decimal>("CgFee")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购机建 ");

                    b.Property<decimal>("CgFx")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购返现");

                    b.Property<decimal>("CgGqPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购改签费");

                    b.Property<decimal>("CgNORebatePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购价（不含后返）  ");

                    b.Property<string>("CgPattern")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new采购方式 ");

                    b.Property<string>("CgPatternCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new采购方式编码 ");

                    b.Property<decimal>("CgPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购金额 ");

                    b.Property<decimal>("CgProxyPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购代理费 ");

                    b.Property<decimal>("CgProxyRate")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购代理费率 ");

                    b.Property<string>("CgProxyRateZhCn")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new采购代理费率中文 ");

                    b.Property<decimal>("CgRebatePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购价（含后返） ");

                    b.Property<string>("CgSubject")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new采购科目 ");

                    b.Property<string>("CgSubjectCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new采购科目编码 ");

                    b.Property<decimal>("CgTax")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购税费 ");

                    b.Property<decimal>("CgTkPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购退票费");

                    b.Property<decimal>("CgTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购小计 ");

                    b.Property<decimal>("CgYQ")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new采购燃油费 ");

                    b.Property<DateTime?>("ChangeOrderFinishTime")
                        .HasColumnType("datetime2")
                        .HasComment("new改签完成时间 ");

                    b.Property<string>("Cjr")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new乘机人 ");

                    b.Property<int>("CjrAgeType")
                        .HasColumnType("int")
                        .HasComment("new乘机人年龄类型 ");

                    b.Property<int>("CjrGender")
                        .HasColumnType("int")
                        .HasComment("new乘机人性别 ");

                    b.Property<string>("ContOrChangeCabins")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new连票或者改签票全部舱位 ");

                    b.Property<string>("ContOrChangeFlightNos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new连票或者改签票全部航班号 ");

                    b.Property<string>("ContOrChangeFlyTimeStr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new连票或者改签票全部起飞时间字符串 ");

                    b.Property<string>("ContOrChangeSegs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new连票或者改签票全部航程 ");

                    b.Property<int>("ContOrChangeType")
                        .HasColumnType("int")
                        .HasComment("new连票或者改签票类型 0正常票 1连票主票 2连票副票");

                    b.Property<string>("CpCompany")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new出票公司 ");

                    b.Property<decimal>("CpProfit")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new出票利");

                    b.Property<DateTime?>("CpTime")
                        .HasColumnType("datetime2")
                        .HasComment("new出票时间 ");

                    b.Property<string>("Cpr")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new出票人 ");

                    b.Property<string>("CprDep")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new出票人部门 ");

                    b.Property<string>("CprDepCode")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new出票人部门编码 ");

                    b.Property<string>("CprID")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new出票人ID ");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CwTicketTableKuid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new财务乘机人票号表Kuid");

                    b.Property<string>("Cyr")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new承运人 ");

                    b.Property<string>("CyrPh")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new承运人-票号 ");

                    b.Property<string>("CyrPhs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new承运人-票号(带-) ");

                    b.Property<string>("DdCompany")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new调度公司 ");

                    b.Property<string>("DdRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new调度备注 ");

                    b.Property<DateTime?>("DdTime")
                        .HasColumnType("datetime2")
                        .HasComment("new调度时间 ");

                    b.Property<string>("Ddr")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new调度人 ");

                    b.Property<string>("DdrDep")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new调度人部门 ");

                    b.Property<string>("DdrDepCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new调度人部门编码 ");

                    b.Property<string>("DdrID")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new调度人ID ");

                    b.Property<string>("DepAirport")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new出发机场 ");

                    b.Property<string>("DepAirportZhCn")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new出发机场中文 ");

                    b.Property<string>("DpCompany")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new订票公司 ");

                    b.Property<DateTime>("DpTime")
                        .HasColumnType("datetime2")
                        .HasComment("new订票时间 ");

                    b.Property<string>("Dpr")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new订票人 ");

                    b.Property<string>("DprDep")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new订票人部门 ");

                    b.Property<string>("DprDepCode")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new订票人部门编码 ");

                    b.Property<string>("DprID")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new订票人ID ");

                    b.Property<string>("FDLX")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new返点类型 ");

                    b.Property<decimal>("FX")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new返现 ");

                    b.Property<string>("FirstCabin")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new第一段舱位 ");

                    b.Property<string>("FirstFlightNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new第一段航班号 ");

                    b.Property<DateTime>("FirstFlyTime")
                        .HasColumnType("datetime2")
                        .HasComment("new第一程起飞时间 ");

                    b.Property<string>("FirstSeg")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new第一段航程 ");

                    b.Property<string>("FirstSegZhCn")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new第一段航程中文 ");

                    b.Property<string>("FlightNos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new全部航班号 ");

                    b.Property<string>("FlyTimeStr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new全部起飞时间字符串 ");

                    b.Property<int>("ForeignSegAmount")
                        .HasColumnType("int")
                        .HasComment("new国外航段数 ");

                    b.Property<int>("GnGj")
                        .HasColumnType("int")
                        .HasComment("new国内国际");

                    b.Property<decimal>("GqProfit")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new改签利");

                    b.Property<decimal>("GrossProfit")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new毛利小计（不含后返 ） ");

                    b.Property<decimal>("GrossProfitAddRebate")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new毛利小计（含后返 ） ");

                    b.Property<decimal>("HF")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new后返 ");

                    b.Property<string>("HYDJJSLX")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new会员等级 结算类型 ");

                    b.Property<string>("HYKHDWBH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new会员卡号 单位编号");

                    b.Property<decimal>("InsuranceAgencyPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new保险奖励 ");

                    b.Property<decimal>("InsuranceCost")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new保险成本 ");

                    b.Property<int>("InsuranceCount")
                        .HasColumnType("int")
                        .HasComment("new保险份数 ");

                    b.Property<decimal>("InsuranceSale")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new保险销售 ");

                    b.Property<decimal>("InsuranceSubOrdinatePricing")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new保险下级结算价 ");

                    b.Property<bool>("IsTeam")
                        .HasColumnType("bit")
                        .HasComment("new是否团队");

                    b.Property<decimal>("JSFWF")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new加收服务费");

                    b.Property<decimal>("JieChe")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new接车 ");

                    b.Property<DateTime?>("KHBLSJ")
                        .HasColumnType("datetime2")
                        .HasComment("new客户办理时间 ");

                    b.Property<decimal>("KHGQTK")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new客户改签退款");

                    b.Property<decimal>("KHLK")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new客户留款 ");

                    b.Property<string>("KHLX")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new客户类型 ");

                    b.Property<string>("KHMC")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new客户名称");

                    b.Property<decimal>("KHYTJE")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new客户应退金额");

                    b.Property<string>("LXDH")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new联系电话");

                    b.Property<string>("LXR")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new联系人");

                    b.Property<string>("LXSJ")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new联系手机");

                    b.Property<string>("MainDDBZ")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new订单备注");

                    b.Property<string>("MainPSBZ")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new配送备注");

                    b.Property<string>("MainSFXYH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new三方协议号");

                    b.Property<string>("MainZCDM")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new政策代码");

                    b.Property<int>("MasterTicketType")
                        .HasColumnType("int")
                        .HasComment("new主票证类型");

                    b.Property<decimal>("OfflineProfit")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new线下利润");

                    b.Property<string>("OfflineProfitSource")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new线下利润来源");

                    b.Property<long?>("OfflineShareTag")
                        .HasColumnType("bigint")
                        .HasComment("new线下分担号 标记 以后做外键 ");

                    b.Property<string>("OldPnr")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new原PNR");

                    b.Property<string>("OrderDec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new订单描述");

                    b.Property<DateTime?>("OrderFinishTime")
                        .HasColumnType("datetime2")
                        .HasComment("new订单完成时间（支付时间） ");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new订单号");

                    b.Property<int>("OrderSubType")
                        .HasColumnType("int")
                        .HasComment("new订单子类型");

                    b.Property<int>("OrderType")
                        .HasColumnType("int")
                        .HasComment("new订单类型");

                    b.Property<string>("OriginalOrderNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new订单号");

                    b.Property<string>("PayMentMethod")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new支付方式 ");

                    b.Property<string>("PayMentMethod1")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new支付方式1 ");

                    b.Property<string>("PayMentMethod2")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new支付方式2 ");

                    b.Property<string>("PayMentMethod3")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new支付方式3 ");

                    b.Property<string>("PayMentRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new支付备注 ");

                    b.Property<string>("PaySubject")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new支付科目 ");

                    b.Property<string>("PaySubject1")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new支付科目1 ");

                    b.Property<string>("PaySubject2")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new支付科目2 ");

                    b.Property<string>("PaySubject3")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new支付科目3 ");

                    b.Property<DateTime?>("PayTime")
                        .HasColumnType("datetime2")
                        .HasComment("new支付时间 ");

                    b.Property<DateTime?>("PayTime1")
                        .HasColumnType("datetime2")
                        .HasComment("new支付时间1 ");

                    b.Property<DateTime?>("PayTime2")
                        .HasColumnType("datetime2")
                        .HasComment("new支付时间2 ");

                    b.Property<DateTime?>("PayTime3")
                        .HasColumnType("datetime2")
                        .HasComment("new支付时间3 ");

                    b.Property<decimal>("PeiSongFei")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new配送费 ");

                    b.Property<string>("Ph")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new票号 ");

                    b.Property<string>("PlatfromSource")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new平台来源 ");

                    b.Property<string>("PnrOrOrderNo")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("newPNR或订单号");

                    b.Property<string>("PolicyUser")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new政策员 ");

                    b.Property<int>("PresentInsuranceCount")
                        .HasColumnType("int")
                        .HasComment("new赠保份数 ");

                    b.Property<decimal>("QiTa")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new其他 ");

                    b.Property<string>("R_User")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new退票员工（退废申请人ID）");

                    b.Property<string>("R_UserName")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new退废申请人");

                    b.Property<decimal>("RebatePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new后返金额 ");

                    b.Property<string>("RebateProxyRate")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new后返费率 ");

                    b.Property<decimal>("ReceivableAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new应收金额 ");

                    b.Property<DateTime?>("RefundOrderFinishTime")
                        .HasColumnType("datetime2")
                        .HasComment("new退票完成时间 ");

                    b.Property<int>("RefundState")
                        .HasColumnType("int")
                        .HasComment("new退废状态0未申请退废 1退票已完成 2退票已申请 3退票已调度 4退票已打单 5退票配送中 6废票已完成 7废票已调度 8废票已打单 9按航段多次退票");

                    b.Property<decimal>("ReturnPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new实际后返");

                    b.Property<decimal>("ReturnPriceEstimate")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new预估后返");

                    b.Property<decimal>("SJSXFGBF")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new上级手续费工本费");

                    b.Property<decimal>("SJWJF")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new上级误机费");

                    b.Property<int>("SegAmount")
                        .HasColumnType("int")
                        .HasComment("new航段数 ");

                    b.Property<int>("SegType")
                        .HasColumnType("int")
                        .HasComment("new航程类型 ");

                    b.Property<string>("Segs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new全部航程 ");

                    b.Property<string>("SegsZhCn")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new全部航程中文 ");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new流水号");

                    b.Property<decimal>("SettlementAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new结算金额 ");

                    b.Property<string>("SettlementUser")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new结算人 ");

                    b.Property<string>("SettlementUserID")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new结算人ID ");

                    b.Property<decimal>("SubOrdinatePricing")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new下级结算价 ");

                    b.Property<decimal>("TFML")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new退废毛利");

                    b.Property<decimal>("TFSTML")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new退废实退毛利");

                    b.Property<string>("TFZT")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new退废状态 ");

                    b.Property<string>("TicketType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new票证类型");

                    b.Property<decimal>("TkProfit")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new退票利");

                    b.Property<string>("TkSerialNumber")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new退款流水号");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("XF")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new现返 ");

                    b.Property<decimal>("XJSXFGBF")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new下级手续费工本费");

                    b.Property<decimal>("XJWJF")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new下级误机费");

                    b.Property<decimal>("XsAgencyPrcie")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售奖励费 ");

                    b.Property<decimal>("XsAgencyRate")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售奖励费率 ");

                    b.Property<string>("XsAgencyRateZhCn")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new销售奖励费率中文 ");

                    b.Property<string>("XsChannelCode")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new销售渠道编码");

                    b.Property<int>("XsChannelGroup")
                        .HasColumnType("int")
                        .HasComment("new销售渠道分组");

                    b.Property<string>("XsChannelName")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new销售渠道名称");

                    b.Property<decimal>("XsFWF")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售服务费 ");

                    b.Property<decimal>("XsFacePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售票面价（销售张单价） ");

                    b.Property<decimal>("XsFacePriceTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售票面小计(账单价+税费)");

                    b.Property<decimal>("XsFee")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售机建 ");

                    b.Property<decimal>("XsGqPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售改签费");

                    b.Property<decimal>("XsGrossProfit")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售毛利 ");

                    b.Property<string>("XsPattern")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new销售方式 ");

                    b.Property<string>("XsPatternCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new销售方式编码 ");

                    b.Property<decimal>("XsPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售价 ");

                    b.Property<decimal>("XsPriceTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售小计（销售价+税费小计） ");

                    b.Property<decimal>("XsProxyRate")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售代理费率 ");

                    b.Property<DateTime?>("XsSaveMoneyTime")
                        .HasColumnType("datetime2")
                        .HasComment("new销售收银时间 ");

                    b.Property<string>("XsSubject")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new销售科目 ");

                    b.Property<string>("XsSubjectCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("new销售科目编码 ");

                    b.Property<decimal>("XsTax")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售税费 ");

                    b.Property<decimal>("XsTaxTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售税费小计 ");

                    b.Property<decimal>("XsTkPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售退票费");

                    b.Property<decimal>("XsYQ")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("new销售燃油 ");

                    b.Property<string>("YwY")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new业务员");

                    b.Property<string>("YwYMC")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("new业务员名称");

                    b.HasKey("Id");

                    b.HasIndex("AddDateDiff");

                    b.HasIndex("AddFXZD");

                    b.HasIndex("AddFZQD");

                    b.HasIndex("AddFZSYB");

                    b.HasIndex("AddFZYWZ");

                    b.HasIndex("AddGQL2");

                    b.HasIndex("AddHXFL");

                    b.HasIndex("AddJYZJ");

                    b.HasIndex("AddOldCyr");

                    b.HasIndex("AddOldFlyTimeStr");

                    b.HasIndex("AddOldPh");

                    b.HasIndex("AddOther");

                    b.HasIndex("AddPZLX");

                    b.HasIndex("AddPriceOrDiscount");

                    b.HasIndex("AddQDFL");

                    b.HasIndex("AddQDFZ");

                    b.HasIndex("AddQDMC");

                    b.HasIndex("AddShare");

                    b.HasIndex("AddTGLX");

                    b.HasIndex("AddTHSDS");

                    b.HasIndex("AddTicketCount");

                    b.HasIndex("AddWDZCLX");

                    b.HasIndex("AddYWZTag");

                    b.HasIndex("AddZCY");

                    b.HasIndex("AddZJHM");

                    b.HasIndex("AirlineBigCode");

                    b.HasIndex("AirlineOrderCode");

                    b.HasIndex("AsmsReportDate");

                    b.HasIndex("BusinessType");

                    b.HasIndex("CgChannelCode");

                    b.HasIndex("CgChannelName");

                    b.HasIndex("CgFx");

                    b.HasIndex("CgTax");

                    b.HasIndex("ChangeOrderFinishTime");

                    b.HasIndex("Cjr");

                    b.HasIndex("CjrAgeType");

                    b.HasIndex("CpCompany");

                    b.HasIndex("CpTime");

                    b.HasIndex("Cpr");

                    b.HasIndex("CprDepCode");

                    b.HasIndex("CprID");

                    b.HasIndex("Cyr");

                    b.HasIndex("CyrPh");

                    b.HasIndex("DpCompany");

                    b.HasIndex("DpTime");

                    b.HasIndex("Dpr");

                    b.HasIndex("DprDepCode");

                    b.HasIndex("DprID");

                    b.HasIndex("FDLX");

                    b.HasIndex("FirstCabin");

                    b.HasIndex("FirstFlightNo");

                    b.HasIndex("FirstFlyTime");

                    b.HasIndex("FirstSeg");

                    b.HasIndex("GnGj");

                    b.HasIndex("HYDJJSLX");

                    b.HasIndex("HYKHDWBH");

                    b.HasIndex("Id");

                    b.HasIndex("IsTeam");

                    b.HasIndex("KHLX");

                    b.HasIndex("KHMC");

                    b.HasIndex("LXDH");

                    b.HasIndex("LXR");

                    b.HasIndex("LXSJ");

                    b.HasIndex("MainDDBZ");

                    b.HasIndex("MainPSBZ");

                    b.HasIndex("MainSFXYH");

                    b.HasIndex("MainZCDM");

                    b.HasIndex("MasterTicketType");

                    b.HasIndex("OfflineShareTag");

                    b.HasIndex("OrderFinishTime");

                    b.HasIndex("OrderNo");

                    b.HasIndex("OrderType");

                    b.HasIndex("PayMentMethod");

                    b.HasIndex("PaySubject");

                    b.HasIndex("PayTime");

                    b.HasIndex("Ph");

                    b.HasIndex("PnrOrOrderNo");

                    b.HasIndex("R_User");

                    b.HasIndex("R_UserName");

                    b.HasIndex("RefundOrderFinishTime");

                    b.HasIndex("SegType");

                    b.HasIndex("SerialNumber");

                    b.HasIndex("SettlementUser");

                    b.HasIndex("SettlementUserID");

                    b.HasIndex("TFZT");

                    b.HasIndex("TicketType");

                    b.HasIndex("TkSerialNumber");

                    b.HasIndex("XsChannelCode");

                    b.HasIndex("XsChannelName");

                    b.HasIndex("YwY");

                    b.HasIndex("YwYMC");

                    b.ToTable("SaleReport");
                });

            modelBuilder.Entity("Domain.Model.ReportModel.SaleReportLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ErrorMsg")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("错误原因");

                    b.Property<int>("InsertState")
                        .HasColumnType("int")
                        .HasComment("插入状态");

                    b.Property<string>("InterfaceName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("调用的接口名");

                    b.Property<string>("QuestPara")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("传递的参数");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("SaleReportLog");
                });

            modelBuilder.Entity("Domain.Model.ReportModel.TempSaleReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AirlineBigCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AirlineCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineOrderCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArrAirport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArrAirportZhCn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessGroupKuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int");

                    b.Property<string>("Cabins")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CgChannelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CgChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CgFWF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CgFacePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CgFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CgGqPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CgPattern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CgPatternCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CgPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CgProxyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CgProxyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CgProxyRateZhCn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CgSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CgSubjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CgTkPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CgYQ")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ChangeOrderFinishTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cjr")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CjrAgeType")
                        .HasColumnType("int");

                    b.Property<int>("CjrGender")
                        .HasColumnType("int");

                    b.Property<decimal>("CpProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CpTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cpr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CprDep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CprDepCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CwTicketTableKuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cyr")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CyrPh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepAirport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepAirportZhCn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DpTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dpr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DprDep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DprDepCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstCabin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstFlightNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FirstFlyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstSeg")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstSegZhCn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightNos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlyTimeStr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ForeignSegAmount")
                        .HasColumnType("int");

                    b.Property<int>("GnGj")
                        .HasColumnType("int");

                    b.Property<decimal>("GqProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsTeam")
                        .HasColumnType("bit");

                    b.Property<int>("MasterTicketType")
                        .HasColumnType("int");

                    b.Property<decimal>("OfflineProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OfflineProfitSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OfflineShareTag")
                        .HasColumnType("bigint");

                    b.Property<string>("OldPnr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderDec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderFinishTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OrderSubType")
                        .HasColumnType("int");

                    b.Property<int>("OrderType")
                        .HasColumnType("int");

                    b.Property<string>("OriginalOrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ph")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PlatfromSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PnrOrOrderNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PolicyUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("R_User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefundOrderFinishTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefundState")
                        .HasColumnType("int");

                    b.Property<decimal>("ReturnPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReturnPriceEstimate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SegAmount")
                        .HasColumnType("int");

                    b.Property<int>("SegType")
                        .HasColumnType("int");

                    b.Property<string>("Segs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegsZhCn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TicketType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TkProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TkSerialNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("XsAgencyPrcie")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("XsAgencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("XsAgencyRateZhCn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XsChannelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("XsChannelGroup")
                        .HasColumnType("int");

                    b.Property<string>("XsChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("XsFWF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("XsFacePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("XsFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("XsGqPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("XsPattern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XsPatternCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("XsPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("XsSaveMoneyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("XsSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XsSubjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("XsTkPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("XsYQ")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("YwY")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirlineBigCode");

                    b.HasIndex("AirlineOrderCode");

                    b.HasIndex("BusinessType");

                    b.HasIndex("ChangeOrderFinishTime");

                    b.HasIndex("Cjr");

                    b.HasIndex("CjrAgeType");

                    b.HasIndex("Cyr");

                    b.HasIndex("CyrPh");

                    b.HasIndex("FirstCabin");

                    b.HasIndex("FirstFlightNo");

                    b.HasIndex("FirstFlyTime");

                    b.HasIndex("FirstSeg");

                    b.HasIndex("GnGj");

                    b.HasIndex("Id");

                    b.HasIndex("IsTeam");

                    b.HasIndex("MasterTicketType");

                    b.HasIndex("OfflineShareTag");

                    b.HasIndex("OrderFinishTime");

                    b.HasIndex("OrderNo");

                    b.HasIndex("OrderType");

                    b.HasIndex("Ph");

                    b.HasIndex("PnrOrOrderNo");

                    b.HasIndex("RefundOrderFinishTime");

                    b.HasIndex("SegType");

                    b.HasIndex("SerialNumber");

                    b.HasIndex("TicketType");

                    b.HasIndex("TkSerialNumber");

                    b.ToTable("TempSaleReport");
                });

            modelBuilder.Entity("Domain.Model.Sys.Sys_Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Authority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ExecTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IOrder")
                        .HasColumnType("int");

                    b.Property<int>("IStatus")
                        .HasColumnType("int");

                    b.Property<int>("IType")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ParentID")
                        .HasColumnType("bigint");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermissionContent")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("权限内容");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ZT")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_Menu");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedTime = new DateTimeOffset(new DateTime(2024, 5, 31, 14, 51, 14, 716, DateTimeKind.Unspecified).AddTicks(625), new TimeSpan(0, 8, 0, 0, 0)),
                            ExecTime = new DateTime(2024, 5, 31, 14, 51, 14, 716, DateTimeKind.Local).AddTicks(614),
                            ExecUser = "7058",
                            IOrder = 1,
                            IStatus = 1,
                            IType = 1,
                            Kuid = "EBE24288-153B-4D5C-809B-8AFA5ECEC07A",
                            Name = "系统管理",
                            ParentID = 0L,
                            PermissionContent = "访问",
                            ZT = 1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedTime = new DateTimeOffset(new DateTime(2024, 5, 31, 14, 51, 14, 716, DateTimeKind.Unspecified).AddTicks(642), new TimeSpan(0, 8, 0, 0, 0)),
                            ExecTime = new DateTime(2024, 5, 31, 14, 51, 14, 716, DateTimeKind.Local).AddTicks(641),
                            ExecUser = "7058",
                            IOrder = 0,
                            IStatus = 1,
                            IType = 1,
                            Kuid = "77DE61D1-9A21-411F-9F65-5163A3BBBC8C",
                            Name = "菜单管理",
                            ParentID = 1L,
                            Path = "/Sys/Menu/List",
                            PermissionContent = "访问",
                            ZT = 1
                        },
                        new
                        {
                            Id = 3L,
                            CreatedTime = new DateTimeOffset(new DateTime(2024, 5, 31, 14, 51, 14, 716, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 8, 0, 0, 0)),
                            ExecTime = new DateTime(2024, 5, 31, 14, 51, 14, 716, DateTimeKind.Local).AddTicks(649),
                            ExecUser = "7058",
                            IOrder = 1,
                            IStatus = 1,
                            IType = 1,
                            Kuid = "ED5CCD58-E0A3-44E4-831F-740B69D75BA9",
                            Name = "角色管理",
                            ParentID = 1L,
                            Path = "/Sys/Role/List",
                            PermissionContent = "访问",
                            ZT = 1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedTime = new DateTimeOffset(new DateTime(2024, 5, 31, 14, 51, 14, 716, DateTimeKind.Unspecified).AddTicks(652), new TimeSpan(0, 8, 0, 0, 0)),
                            ExecTime = new DateTime(2024, 5, 31, 14, 51, 14, 716, DateTimeKind.Local).AddTicks(651),
                            ExecUser = "7058",
                            IOrder = 2,
                            IStatus = 1,
                            IType = 1,
                            Kuid = "028C99FE-5CC7-423A-B17E-0570C802D341",
                            Name = "用户管理",
                            ParentID = 1L,
                            Path = "/Sys/User/List",
                            PermissionContent = "访问",
                            ZT = 1
                        });
                });

            modelBuilder.Entity("Domain.Model.Sys.Sys_Notice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ReadStatus")
                        .HasColumnType("int")
                        .HasComment("阅读状态 未读  1已读");

                    b.Property<int>("ShowStatus")
                        .HasColumnType("int")
                        .HasComment("提醒状体 0未提醒  1已提醒");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("Sys_Notice");
                });

            modelBuilder.Entity("Domain.Model.Sys.Sys_Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PermissionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Sys_Permission");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionName = "访问"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionName = "新增"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionName = "修改"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionName = "删除"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionName = "启用/禁用"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionName = "复制"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionName = "详情"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionName = "导入"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionName = "导出"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionName = "上传"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PermissionName = "下载"
                        });
                });

            modelBuilder.Entity("Domain.Model.Sys.Sys_Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ExecTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ZT")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_Role");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedTime = new DateTimeOffset(new DateTime(2024, 5, 31, 14, 51, 14, 718, DateTimeKind.Unspecified).AddTicks(6398), new TimeSpan(0, 8, 0, 0, 0)),
                            ExecTime = new DateTime(2024, 5, 31, 14, 51, 14, 718, DateTimeKind.Local).AddTicks(6390),
                            ExecUser = "7058",
                            Info = "内置数据  不要删除",
                            Kuid = "db2811e0-b938-4f76-8901-838e0fbe1c8c",
                            Name = "内置管理员",
                            ZT = 1
                        });
                });

            modelBuilder.Entity("Domain.Model.Sys.Sys_Role_Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ExecTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Permission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Sys_Role_Menu");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedTime = new DateTimeOffset(new DateTime(2024, 5, 31, 14, 51, 14, 719, DateTimeKind.Unspecified).AddTicks(3645), new TimeSpan(0, 8, 0, 0, 0)),
                            ExecTime = new DateTime(2024, 5, 31, 14, 51, 14, 719, DateTimeKind.Local).AddTicks(3651),
                            ExecUser = "7058",
                            MenuID = "EBE24288-153B-4D5C-809B-8AFA5ECEC07A",
                            RoleID = "db2811e0-b938-4f76-8901-838e0fbe1c8c"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedTime = new DateTimeOffset(new DateTime(2024, 5, 31, 14, 51, 14, 719, DateTimeKind.Unspecified).AddTicks(3654), new TimeSpan(0, 8, 0, 0, 0)),
                            ExecTime = new DateTime(2024, 5, 31, 14, 51, 14, 719, DateTimeKind.Local).AddTicks(3655),
                            ExecUser = "7058",
                            MenuID = "77DE61D1-9A21-411F-9F65-5163A3BBBC8C",
                            RoleID = "db2811e0-b938-4f76-8901-838e0fbe1c8c"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedTime = new DateTimeOffset(new DateTime(2024, 5, 31, 14, 51, 14, 719, DateTimeKind.Unspecified).AddTicks(3656), new TimeSpan(0, 8, 0, 0, 0)),
                            ExecTime = new DateTime(2024, 5, 31, 14, 51, 14, 719, DateTimeKind.Local).AddTicks(3657),
                            ExecUser = "7058",
                            MenuID = "ED5CCD58-E0A3-44E4-831F-740B69D75BA9",
                            RoleID = "db2811e0-b938-4f76-8901-838e0fbe1c8c"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedTime = new DateTimeOffset(new DateTime(2024, 5, 31, 14, 51, 14, 719, DateTimeKind.Unspecified).AddTicks(3658), new TimeSpan(0, 8, 0, 0, 0)),
                            ExecTime = new DateTime(2024, 5, 31, 14, 51, 14, 719, DateTimeKind.Local).AddTicks(3659),
                            ExecUser = "7058",
                            MenuID = "028C99FE-5CC7-423A-B17E-0570C802D341",
                            RoleID = "db2811e0-b938-4f76-8901-838e0fbe1c8c"
                        });
                });

            modelBuilder.Entity("Domain.Model.Sys.Sys_User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AsmsPwd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientInfo")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DataLevel")
                        .HasColumnType("int")
                        .HasComment("用户权限级别");

                    b.Property<int?>("ErrorCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ErrorTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IStatus")
                        .HasColumnType("int")
                        .HasComment("用户状态 1可用 其他 禁用");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RealName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SStatus")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ZT")
                        .HasColumnType("int")
                        .HasComment("删除标记 1正常  其他删除");

                    b.HasKey("Id");

                    b.ToTable("Sys_User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedTime = new DateTimeOffset(new DateTime(2024, 5, 31, 14, 51, 14, 721, DateTimeKind.Unspecified).AddTicks(435), new TimeSpan(0, 8, 0, 0, 0)),
                            DataLevel = 0,
                            IStatus = 1,
                            NickName = "管理员",
                            Password = "96d8da76baa88a7d85eb842d7b822b45",
                            RoleId = "db2811e0-b938-4f76-8901-838e0fbe1c8c",
                            RoleName = "内置管理员",
                            UserName = "7058",
                            ZT = 1
                        });
                });

            modelBuilder.Entity("Domain.ViewModel.V_SaleReport", b =>
                {
                    b.Property<int>("OTA")
                        .HasColumnType("int");

                    b.Property<string>("OTA渠道")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("三字码")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("业务员")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("业务类型")
                        .HasColumnType("int");

                    b.Property<string>("业务组")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("业务组Kuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("乘机人类型")
                        .HasColumnType("int");

                    b.Property<string>("乘机日")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("乘机日期")
                        .HasColumnType("datetime2");

                    b.Property<string>("付款科目")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("保险出票利")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("保险出票量")
                        .HasColumnType("int");

                    b.Property<decimal>("保险改签利")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("保险改签量")
                        .HasColumnType("int");

                    b.Property<decimal>("保险退票利")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("保险退票量")
                        .HasColumnType("int");

                    b.Property<string>("出港地")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("出票利")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("出票员")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("出票时间")
                        .HasColumnType("datetime2");

                    b.Property<string>("出票部门")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("出票量")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("创建时间")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("原PNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("国内国际")
                        .HasColumnType("int");

                    b.Property<string>("外出票单位")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("外航航段数")
                        .HasColumnType("int");

                    b.Property<string>("始发地")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("实际后返")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("客户名称")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("小计利润无后返")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("小计利润有实际后返")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("小计利润有预估后返")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("平台来源")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("报表日")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("报表日期")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("收银日")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("收银日期")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("改签利")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("改签时间")
                        .HasColumnType("datetime2");

                    b.Property<int>("改签量")
                        .HasColumnType("int");

                    b.Property<string>("政策员")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("新PNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("机票张数")
                        .HasColumnType("int");

                    b.Property<string>("目的地")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("票号")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("票证类型")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("票面小计")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("线下利润")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("结算日")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("结算日期")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("航司")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("航段数")
                        .HasColumnType("int");

                    b.Property<string>("航程")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("航程名称")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("航程类型")
                        .HasColumnType("int");

                    b.Property<int>("订单子类型")
                        .HasColumnType("int");

                    b.Property<string>("订单描述")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("订单类型")
                        .HasColumnType("int");

                    b.Property<string>("订票部门")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("账单价")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("辅营出票利")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("辅营出票量")
                        .HasColumnType("int");

                    b.Property<decimal>("辅营改签利")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("辅营改签量")
                        .HasColumnType("int");

                    b.Property<decimal>("辅营退票利")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("辅营退票量")
                        .HasColumnType("int");

                    b.Property<string>("退废状态")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("退票利")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("退票员")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("退票时间")
                        .HasColumnType("datetime2");

                    b.Property<int>("退票量")
                        .HasColumnType("int");

                    b.Property<decimal>("采购代理费")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("采购价")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("采购小计")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("采购票面价")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("采购科目")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("销售代理费")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("销售价")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("销售机建")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("销售燃油")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("预估后返")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("预售天数")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("V_SaleReport");
                });
#pragma warning restore 612, 618
        }
    }
}
